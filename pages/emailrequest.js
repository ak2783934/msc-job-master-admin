import React, { useEffect, useState } from "react";
import Layout from "../layout";
import Head from "next/head";
import Link from "next/link";
import Cookies from "js-cookie";
import Router from "next/router";
import { isAuthenticated } from "../contexts/auth";
import { api } from "./api";
import ReactLoading from "react-loading";

const IndividualRequest = ({ emailRequest }) => {
  const { _id, name, emailId, jobType } = emailRequest;
  const token = Cookies.get("token");
  const userId = Cookies.get("userId");
  console.log(emailRequest);
  return (
    <div className="flex flex-row justify-between w-full p-2 my-1 bg-gray-300 rounded">
      <div className="flex flex-row w-[95%]">
        <div className="w-[25%]">{name}</div>
        <div className="w-[30%] mx-4">{emailId}</div>
        <div className="w-[40%] cursor-pointer">{jobType}</div>
      </div>
      <div
        className="cursor-pointer"
        onClick={() => {
          api
            .delete(`/freejobalert/delete/${userId}/${_id}`, {
              headers: {
                "Content-Type": "application/json",
                Authorization: `Bearer ${token}`,
              },
            })
            .then((response) => {
              // console.log(response);
              console.log(response);
              Router.reload(window.location.pathname);
            })
            .catch((error) => {
              if (error.response) {
                console.log(error.response.data);
                console.log(error.response.status);
                console.log(error.response.headers);
              } else if (error.request) {
                // The request was made but no response was received
                console.log(error.request);
              } else {
                // Something happened in setting up the request that triggered an Error
                console.log("Error", error.message);
              }
            });
        }}
      >
        <img className="w-7 h-7" src="/delete-icon.svg" alt="delete-button" />
      </div>
    </div>
  );
};

const EmailRequest = () => {
  const [emailRequests, setEmailRequests] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const isAuthenticate = isAuthenticated();
    if (!isAuthenticate) {
      Router.push("/");
    }
    const token = Cookies.get("token");
    const userId = Cookies.get("userId");
    api
      .get(`/freejobalert/getall/${userId}`, {
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
      })
      .then((response) => {
        // console.log(response);
        setEmailRequests(response.data.freeJobAlerts);
        setLoading(false);
      })
      .catch((error) => {
        if (error.response) {
          console.log(error.response.data);
          console.log(error.response.status);
          console.log(error.response.headers);
        } else if (error.request) {
          // The request was made but no response was received
          console.log(error.request);
        } else {
          // Something happened in setting up the request that triggered an Error
          console.log("Error", error.message);
        }
      });
  }, []);

  return (
    <Layout>
      <Head>
        <title>Msc jobs employers </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="h-auto bg-[#008BF3] py-[70px]">
        <div className="w-[800px] h-auto mx-auto bg-[#1F5050] py-[30px]">
          <div className="m-4 border-b-2 border-gray-700">
            <Link href="/">
              <a className="flex flex-col items-center px-16 py-8">
                <img src="/msc-logo.svg" className="h-[100px]" alt="msc-logo" />
                <div className="pt-1 text-white font-Rochester text-tiny md:pt-0 md:text-[10px]">
                  Better Career
                </div>
              </a>
            </Link>
          </div>
          <div className="text-xl font-bold text-center text-white">
            EMAIL REQUEST
          </div>
        </div>
        <div className="w-[800px] my-6 h-auto mx-auto bg-white px-[30px] py-[30px]">
          {loading && (
            <ReactLoading
              className="mx-auto"
              type={"spinningBubbles"}
              color="#008BF3"
            />
          )}
          {emailRequests.length === 0 && (
            <div className="py-3 text-center text-red-700">
              No Email requests present
            </div>
          )}
          {!loading && emailRequests.length != 0 && (
            <div className="flex flex-row justify-between w-full p-2 mb-5 bg-red-300 rounded">
              <div className="flex flex-row w-[95%]">
                <div className="w-[25%]">Name</div>
                <div className="w-[30%] mx-4">Email Id</div>
                <div className="w-[30%]">jobType</div>
              </div>
              <div className="">Delete</div>
            </div>
          )}

          <div className="h-[400px] overflow-auto">
            {emailRequests.map((emailRequest, index) => {
              console.log(emailRequest);
              return (
                <IndividualRequest key={index} emailRequest={emailRequest} />
              );
            })}
          </div>
        </div>
      </div>
    </Layout>
  );
};

export default EmailRequest;
